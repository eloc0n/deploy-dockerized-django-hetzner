version: "3.8"

volumes:
  portfolio_postgres_data:
  media:
  static:

services:
  nginx:
    container_name: portfolio_proxy
    hostname: mas.proxy
    build:
      context: .
      dockerfile: devops/nginx/Dockerfile
      args:
        HTPASSWD: "${HTPASSWD:-admin}"
    restart: unless-stopped
    depends_on:
      - django
    env_file:
      - .env
    ports:
      - 8000:80
      - 443:443
    volumes:
      - media:/app/media
      - static:/app/static

  certbot:
    image: certbot/certbot
    depends_on:
      - django
    container_name: portfolio_certbot
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email ${SSL_EMAIL} -d giannisbratias.xyz -d www.giannisbratias.xyz --agree-tos

  postgres:
    container_name: portfolio_database
    hostname: mas.database
    image: postgres:12
    restart: unless-stopped
    volumes:
      - portfolio_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

  django:
    container_name: portfolio_application
    hostname: mas.application
    build:
      context: .
      dockerfile: devops/django/Dockerfile
      args:
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
    image: ${DOCKER_IMAGE:-portfolio_django}
    restart: unless-stopped
    user: django
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: python manage.py runserver 0.0.0.0:8000
    expose:
      - 8000
    ports:
      - 5060:5050
    volumes:
      - .:/app
      - ./logs:/logs
      - media:/app/media
      - static:/app/static
